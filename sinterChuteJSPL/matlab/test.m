%% Import data from text file.
% Script for importing data from the following text file:
%
%    /mnt/DATA/liggghts/testSinterChuteLocal/work/sinterChuteJSPL/postMass2/countRate.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2015/03/13 12:02:52

close all
clear all
clc

%% Initialize variables.
filename = './countRate.txt';
delimiter = ' ';

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%*s%*s%*s%*s%*s%*s%*s%*s%s%s%s%s%s%s%s%*s%*s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter,  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]
    % Converts strings in the input cell array to numbers. Replaced non-numeric
    % strings with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1);
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData{row}, regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if any(numbers==',');
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(thousandsRegExp, ',', 'once'));
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric strings to numbers.
            if ~invalidThousandsSeparator;
                numbers = textscan(strrep(numbers, ',', ''), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch me
        end
    end
end


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Allocate imported array to column variable names
rS0percBottom = cell2mat(raw(:, 1));
rS1percBottom = cell2mat(raw(:, 2));
rS2percBottom = cell2mat(raw(:, 3));
rS3percBottom = cell2mat(raw(:, 4));
rS4percBottom = cell2mat(raw(:, 5));
rS5percBottom = cell2mat(raw(:, 6));
rS6percBottom = cell2mat(raw(:, 7));
rS0percCentral = cell2mat(raw(:, 8));
rS1percCentral = cell2mat(raw(:, 9));
rS2percCentral = cell2mat(raw(:, 10));
rS3percCentral = cell2mat(raw(:, 11));
rS4percCentral = cell2mat(raw(:, 12));
rS5percCentral = cell2mat(raw(:, 13));
rS6percCentral = cell2mat(raw(:, 14));
rS0percTop = cell2mat(raw(:, 15));
rS1percTop = cell2mat(raw(:, 16));
rS2percTop = cell2mat(raw(:, 17));
rS3percTop = cell2mat(raw(:, 18));
rS4percTop = cell2mat(raw(:, 19));
rS5percTop = cell2mat(raw(:, 20));
rS6percTop = cell2mat(raw(:, 21));

%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp me R;


%%
totBottom = rS0percBottom + rS1percBottom + rS2percBottom + rS3percBottom + rS4percBottom + rS5percBottom + rS6percBottom;
rS6percBottomPerc = rS6percBottom./totBottom;
rS6percBottomPerc(find(isnan(rS6percBottomPerc)))=0;
rS5percBottomPerc = (rS5percBottom-rS6percBottom)./totBottom;
rS5percBottomPerc(find(isnan(rS5percBottomPerc)))=0;
rS4percBottomPerc = (rS4percBottom-rS5percBottom)./totBottom;
rS4percBottomPerc(find(isnan(rS4percBottomPerc)))=0;
rS3percBottomPerc = (rS3percBottom-rS4percBottom)./totBottom;
rS3percBottomPerc(find(isnan(rS3percBottomPerc)))=0;
rS2percBottomPerc = (rS2percBottom-rS3percBottom)./totBottom;
rS2percBottomPerc(find(isnan(rS2percBottomPerc)))=0;
rS1percBottomPerc = (rS1percBottom-rS2percBottom)./totBottom;
rS1percBottomPerc(find(isnan(rS1percBottomPerc)))=0;
rS0percBottomPerc = (rS0percBottom-rS1percBottom)./totBottom;
rS0percBottomPerc(find(isnan(rS0percBottomPerc)))=0;

totCentral = rS0percCentral + rS1percCentral + rS2percCentral + rS3percCentral + rS4percCentral + rS5percCentral + rS6percCentral;
rS6percCentralPerc = rS6percCentral./totCentral;
rS6percCentralPerc(find(isnan(rS6percCentralPerc)))=0;
rS5percCentralPerc = (rS5percCentral-rS6percCentral)./totCentral;
rS5percCentralPerc(find(isnan(rS5percCentralPerc)))=0;
rS4percCentralPerc = (rS4percCentral-rS5percCentral)./totCentral;
rS4percCentralPerc(find(isnan(rS4percCentralPerc)))=0;
rS3percCentralPerc = (rS3percCentral-rS4percCentral)./totCentral;
rS3percCentralPerc(find(isnan(rS3percCentralPerc)))=0;
rS2percCentralPerc = (rS2percCentral-rS3percCentral)./totCentral;
rS2percCentralPerc(find(isnan(rS2percCentralPerc)))=0;
rS1percCentralPerc = (rS1percCentral-rS2percCentral)./totCentral;
rS1percCentralPerc(find(isnan(rS1percCentralPerc)))=0;
rS0percCentralPerc = (rS0percCentral-rS1percCentral)./totCentral;
rS0percCentralPerc(find(isnan(rS0percCentralPerc)))=0;

totTop = rS0percTop + rS1percTop + rS2percTop + rS3percTop + rS4percTop + rS5percTop + rS6percTop;
rS6percTopPerc = rS6percTop./totTop;
rS6percTopPerc(find(isnan(rS6percTopPerc)))=0;
rS5percTopPerc = (rS5percTop-rS6percTop)./totTop;
rS5percTopPerc(find(isnan(rS5percTopPerc)))=0;
rS4percTopPerc = (rS4percTop-rS5percTop)./totTop;
rS4percTopPerc(find(isnan(rS4percTopPerc)))=0;
rS3percTopPerc = (rS3percTop-rS4percTop)./totTop;
rS3percTopPerc(find(isnan(rS3percTopPerc)))=0;
rS2percTopPerc = (rS2percTop-rS3percTop)./totTop;
rS2percTopPerc(find(isnan(rS2percTopPerc)))=0;
rS1percTopPerc = (rS1percTop-rS2percTop)./totTop;
rS1percTopPerc(find(isnan(rS1percTopPerc)))=0;
rS0percTopPerc = (rS0percTop-rS1percTop)./totTop;
rS0percTopPerc(find(isnan(rS0percTopPerc)))=0;

rS0atom = 0.0125;
rS1atom = 0.0150;
rS2atom = 0.0250;
rS3atom = 0.0400;
rS4atom = 0.0625;
rS5atom = 0.1000;
rS6atom = 0.1250;

dS0atom = rS0atom*2;
dS1atom = rS1atom*2;
dS2atom = rS2atom*2;
dS3atom = rS3atom*2;
dS4atom = rS4atom*2;
dS5atom = rS5atom*2;
dS6atom = rS6atom*2;

meanDWeightTop =  dS0atom*rS0percTopPerc + dS1atom*rS1percTopPerc + dS2atom*rS2percTopPerc + dS3atom*rS3percTopPerc + dS4atom*rS4percTopPerc + dS5atom*rS5percTopPerc + dS6atom*rS6percTopPerc; 
meanDWeightCentral =  dS0atom*rS0percCentralPerc + dS1atom*rS1percCentralPerc + dS2atom*rS2percCentralPerc + dS3atom*rS3percCentralPerc + dS4atom*rS4percCentralPerc + dS5atom*rS5percCentralPerc + dS6atom*rS6percCentralPerc; 
meanDWeightBottom =  dS0atom*rS0percBottomPerc + dS1atom*rS1percBottomPerc + dS2atom*rS2percBottomPerc + dS3atom*rS3percBottomPerc + dS4atom*rS4percBottomPerc + dS5atom*rS5percBottomPerc + dS6atom*rS6percBottomPerc; 

time = [.00:.01:19.92]';

figure(1)
plot(time,rS6percBottomPerc,'DisplayName','rS6percBottomPerc');hold all;
plot(time,rS5percBottomPerc,'DisplayName','rS5percBottomPerc');
plot(time,rS4percBottomPerc,'DisplayName','rS4percBottomPerc');
plot(time,rS3percBottomPerc,'DisplayName','rS3percBottomPerc');
plot(time,rS2percBottomPerc,'DisplayName','rS2percBottomPerc');
plot(time,rS1percBottomPerc,'DisplayName','rS1percBottomPerc');
plot(time,rS0percBottomPerc,'DisplayName','rS0percBottomPerc');hold off;
xlabel('time [s]');
ylabel('percentage [-]');



figure(2)
plot(time,rS6percCentralPerc,'DisplayName','rS6percCentralPerc');hold all;
plot(time,rS5percCentralPerc,'DisplayName','rS5percCentralPerc');
plot(time,rS4percCentralPerc,'DisplayName','rS4percCentralPerc');
plot(time,rS3percCentralPerc,'DisplayName','rS3percCentralPerc');
plot(time,rS2percCentralPerc,'DisplayName','rS2percCentralPerc');
plot(time,rS1percCentralPerc,'DisplayName','rS1percCentralPerc');
plot(time,rS0percCentralPerc,'DisplayName','rS0percCentralPerc');hold off;
xlabel('time [s]');
ylabel('percentage [-]');


figure(3)
plot(time,rS6percTopPerc,'DisplayName','rS6percTopPerc');hold all;
plot(time,rS5percTopPerc,'DisplayName','rS5percTopPerc');
plot(time,rS4percTopPerc,'DisplayName','rS4percTopPerc');
plot(time,rS3percTopPerc,'DisplayName','rS3percTopPerc');
plot(time,rS2percTopPerc,'DisplayName','rS2percTopPerc');
plot(time,rS1percTopPerc,'DisplayName','rS1percTopPerc');
plot(time,rS0percTopPerc,'DisplayName','rS0percTopPerc');hold off;
xlabel('time [s]');
ylabel('percentage [-]');

