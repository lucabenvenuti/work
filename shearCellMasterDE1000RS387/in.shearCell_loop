#########################################################################################
# title: in.shearCell_loop                                                              #
# version: 5.01                                                                         #
# additional files: folder mesh,                                                        #
#                   folder matlab,                                                      #
#                   postprocessing-script plotForce_v3_16.m                             #
# date: Jul. 2015                                                                       #
# authors: Benvenuti, L., Queteschiner, D., Aigner, A., Berger R., Nasato, D.           #
# e-mail: luca.benvenuti@jku.at                                                         #
# short description: liggghts-input file for computing the shear force of a simple      #
# shear tester while varying the coefficient of friction.                               #
#  Part of the material characterization project                                        #
#########################################################################################

#########################################################################################
#                               user defined settings: settings                         #
#########################################################################################
variable fileID equal ${iden}
label loopiteration

variable    rad     equal       1500e-6          # particle radius [m]
variable    radmu   equal       1500e-6             # particle radius mean [m]
variable  radsigma  equal       387e-6            # particle radius sigma[m]
variable  radR1     equal       0.0025
variable  radPerc1  equal       0.05
variable  radR2     equal       0.002
variable  radPerc2  equal       0.10
variable  radR3     equal       0.0015
variable  radPerc3  equal       0.70
variable  radR4     equal       0.001
variable  radPerc4  equal       0.10
variable  radR5     equal       0.0005
variable  radPerc5  equal       0.05
variable  radR6     equal       0.0001
variable  radPerc6  equal       0.0
variable    dens    equal       1000      #sinterfine      # particle density [kg/m3]
variable    ym      equal       1e7             # Young's modulus  [Pa]
variable    pr      equal       0.4            # Poisson ratio   [-]
variable    rest    index       0.5 0.9           # coefficient of restitution [-]
variable    fric    index       0.1 0.5 0.9        # coefficient of friction (loop variable) [-]
variable    rf      index       0.1 0.5 0.9        # coefficient of rolling friction (optional loop) [-]
variable    rolfrtypnum equal	4		# rolling friction option ( 1 = off, 2 = cdt, 3 = epsd, 4 = epsd2)
variable    rolfrtyp string	epsd2
variable    uniSys  equal       1		 # unit System ( 1=SI, 2=cgs)
variable    radDist equal       3         # radius distribution (1 = (25%rad*0.99 , 25%rad*1.01, 50%rad ; 
                                           # 2=gaussian distribution with radmu & radsigma)
                                           # for 2 you must uncomment radsigma & radmu, the latter must be equal to rad
                                            # 3=discrete distribution with real values

variable    dt      equal       1e-6            # time step width [s]

variable    dCylDp  index       ${DCYLDP} #38 50 75     # ratio cylinder diameter to particle diameter (opional loop)

variable    accGrev equal       9.81            # acceleration due to gravity [m/s2]

variable    shearperc index 	1.0 #0.4 0.6 percentage of normal load during shear compared to the one during preshear

variable    shearCellType   index 3     #1 2     #(1=PoorMan; 2=Jenike; 3=Schulze)

processors  ${XPROCS} ${YPROCS} ${ZPROCS}

variable    numProc equal       ${XPROCS}*${YPROCS}*${ZPROCS}*${NTHREADS}

variable    ratio   equal       0.0001    
# defines the maximum wall velocity in the vicinity of particles (only for the 'auto' mode)
# v_max = ratio*MIN(rad)/dt

# experimental parameter
variable    expMass         index  4.3420[kg] mass used in experiment 

variable    expDiam         equal   0.10415      # diam of shear cell [m]

#########################################################################################
#   DUMP COMMANDS ARE DISABLED. IF YOU NEED THEM UNCOMMENT THEM. SEARCH FOR 'MARKDUMP'  #
#########################################################################################

#########################################################################################
#   IF YOU CHANGE ANYTHING BELOW THIS LINE, YOU MIGHT ADAPT THE POSTPROCESSING SCRIPT   #
#########################################################################################

#########################################################################################
#                               internal settings - do not touch                        #
#########################################################################################
units		si
#########################################################################################
# geometry scaling, mass, number of timesteps, ...
variable    sVelWall        equal   3 # scale that defines the wall velocity (default = 3)
variable    velWall         equal   ${rad}*${sVelWall}

variable    skin            equal   0.5*${rad}
variable    velMax          equal   0.49*${skin}/${dt}

variable    cylDiameter     equal   ${dCylDp}*2*${rad} # 50 particle in cyl diameter
variable    cylRadius       equal   0.5*${cylDiameter} 
variable    cylArea         equal   0.25*${cylDiameter}*${cylDiameter}*PI

variable    ctrlStress      equal   -${accGrev}*${expMass}/(${expDiam}*${expDiam}*PI*0.25) 
variable    ctrlForce       equal   ${ctrlStress}*${cylArea}
variable    ctrlForcemain   equal   ${ctrlForce}*${shearperc}
variable    ctrlForceZero   equal   ${ctrlForce}*0.001

variable    bottomPos       equal   0.5*${cylRadius}

# dimensions of simulation domain
variable    nx  equal   -2.01*${cylRadius}    # neg. x-value .. bigger for motion
variable    px  equal    1.5*${cylRadius}     # pos. x-value
variable    ny  equal   -1.05*${cylRadius}    # neg. y-value
variable    py  equal    1.05*${cylRadius}    # pos. y-value
variable    nz  equal   -${rad}               # neg. z-value (just not 0.0)

# pos. z-value
variable    pz  equal    1.75*${cylRadius}

# run & dump times
variable    nDump           equal   round(1e-1/${dt})
variable    nScreen         equal   round(1e-2/${dt})
variable    nDumpForce      equal   round(1e-3/${dt})

variable    nStepsSettle    equal   round(${pz}/(0.5*${velMax}*${dt}))
variable    nStepsRun       equal   round(0.5*0.375*${cylRadius}/(${velWall}*${dt}))
variable    nStepsRun2      equal   round(${nStepsRun}/20)
variable    nStepsRun3      equal   ${nStepsRun2}*19
variable    nStepsRun4      equal   ${nStepsRun}*2
variable    totaltime	    equal   ${dt}*${nStepsRun}*2
variable    zoltanSteps	    equal   round(${nStepsRun}/10.0)

variable 	sDump 			equal	round(1e-2/${dt}) # Interval to check force
variable 	ForceZCad3M 	equal 	-0.90*${ctrlForce} # loop break criteria - force in servo wall reaches 90% of the expected force
variable 	ForceExpect  	equal	-1.0*${ctrlForce} # Just inverted signal, so print looks nice :D

#########################################################################################

# create directories
shell   mkdir logs
shell   mkdir restart
shell   mkdir results
shell   mkdir post

# writing log file to post folder
log     logs/log.shearCell_rad${rad}_dcyldp${dCylDp}_mu${fric}_rf${rf}_dt${dt}.txt

atom_style	granular
atom_modify	map array
boundary    f f f
newton      off

communicate	single vel yes

# load simulation domain, particles, ...
read_restart	./restart/restart.shearCell_rad${rad}_dcyldp${dCylDp}_${OMPON}

neighbor	    ${skin} bin
neigh_modify	delay 0

#Material properties required for new pair styles
fix     m1 all property/global youngsModulus peratomtype ${ym} ${ym}
fix     m2 all property/global poissonsRatio peratomtype ${pr} ${pr}
fix     m3 all property/global coefficientRestitution peratomtypepair 2 ${rest} ${rest} ${rest} ${rest}
fix     m4 all property/global coefficientFriction peratomtypepair 2 ${fric} 0.0 0.0 0.0
fix     m5 all property/global coefficientRollingFriction peratomtypepair 2 ${rf} 0.0 0.0 0.0

# pair style # ompOn check
pair_style 	gran model hertz tangential history rolling_friction ${rolfrtyp}
pair_coeff	* *


#Timestep
timestep	${dt}

#Gravity
#apply nve integration to all particles that are inserted as single particles
fix		gravi all gravity ${accGrev} vector 0.0 0.0 -1.0
fix		integr all nve/sphere
fix     lb all balance 0 xyz 10 1.05



#check timestep
fix     ts all check/timestep/gran 1 0.1 0.1 #use small values to produce output

#output settings, include total thermal energy
compute		    rke all erotate/sphere
thermo_style	custom step atoms ke c_rke vol cpu
thermo		    ${nScreen}
thermo_modify	lost ignore norm no
compute_modify  thermo_temp dynamic yes

# --- runs ---
# run 0 ... assign actual data to atoms
# then we may shrink the box
run     0
change_box    all x final ${nx} ${px} y final ${ny} ${py} z final ${nz} ${pz} units box

#import triangular mesh from cad
fix     cad1 all mesh/surface/stress file mesh/upperCyl.stl verbose no type 2 scale ${cylRadius} move 0.0 0.0 ${bottomPos}
fix     cad2 all mesh/surface/stress file mesh/bottom.stl verbose no type 2 scale ${cylRadius}
fix     cad3 all mesh/surface/stress/servo file mesh/plate.stl verbose no type 2 scale ${cylRadius} & 
	             move 0. 0. ${pz} com 0. 0. ${pz} target_val ${ctrlForce} vel_max ${velMax} &
	             axis 0 0 1 ctrlPV force ratio ${ratio} mode auto
fix   meshWall all wall/gran model hertz tangential history rolling_friction ${rolfrtyp} mesh n_meshes 3 meshes cad1 cad2 cad3


### print a csv file with all the parameteres #2gauss
fix csv all print 1 "${rad}, ${dens}, ${ym}, ${pr}, ${rest}, ${fric}, ${rf}, ${dt}, ${dCylDp}, ${ctrlStress}, ${expDiam}, ${expMass}, ${shearperc}, ${totaltime}, ${fileID}, &
		${rolfrtypnum}, ${nStepsSettle}, ${uniSys}, ${shearCellType}, ${radDist}, ${radmu}, ${radsigma}, ${radR1}, ${radPerc1}, ${radR2}, ${radPerc2}, ${radR3}, ${radPerc3}, &
        ${radR4}, ${radPerc4}, ${radR5}, ${radPerc5}, ${radR6}, ${radPerc6}, ${numProc}, ${XPROCS}, ${YPROCS}, ${ZPROCS}, ${NTHREADS}, ${OMPON}, ${nStepsRun}" &
		file ./results/sim_par_fid${fileID}.csv &
		title "rad, dens, ym, pr, rest, fric, rf, dt, dCylDp, ctrlStress, expDiam, expMass, shearperc, totaltime, fileID, rolfrtypnum, nStepsSettle, uniSys, shearCellType, radDist, radmu, radsigma, &
        radR1, radPerc1, radR2, radPerc2, radR3, radPerc3, radR4, radPerc4, radR5, radPerc5, radR6, radPerc6, numProc, xProcs, yProcs, zProcs, nThreads, OMPON, nStepsRun"

#insert the first particles so that dump is not empty
run		  1

unfix csv

# check only once the timestep
unfix ts

# get mass of particle column
region   upCyl  block  ${nx} ${px} ${ny} ${py} ${bottomPos} ${pz} units box
region   bothCyl  block  ${nx} ${px} ${ny} ${py} ${nz} ${pz} units box
variable mPartCol   equal mass(all,upCyl)
variable mPartBox   equal mass(all,bothCyl)
variable numPartCol   equal count(all,upCyl)
variable numPartBox   equal count(all,bothCyl)

# write stl-forces
variable ForceX     equal f_cad1[1]
variable ForceY     equal f_cad1[2]
variable ForceZ     equal f_cad1[3]
variable TorqueX    equal f_cad1[4]
variable TorqueY    equal f_cad1[5]
variable TorqueZ    equal f_cad1[6]
fix DumpText all print ${nDumpForce} "${ForceX} ${ForceY} ${ForceZ} ${TorqueX} ${TorqueY} ${TorqueZ}" screen no title "Fx Fy Fz Tx Ty Tz " file ./results/force.cad1_fid${fileID}.txt

variable ForceXCad2     equal f_cad2[1]
variable ForceYCad2     equal f_cad2[2]
variable ForceZCad2     equal f_cad2[3]
variable TorqueXCad2    equal f_cad2[4]
variable TorqueYCad2    equal f_cad2[5]
variable TorqueZCad2    equal f_cad2[6]
fix DumpTextCad2 all print ${nDumpForce} "${ForceXCad2} ${ForceYCad2} ${ForceZCad2} ${TorqueXCad2} ${TorqueYCad2} ${TorqueZCad2}" &
			screen no title "Fx Fy Fz Tx Ty Tz" file ./results/force.cad2_fid${fileID}.txt

variable ForceXCad3     equal f_cad3[1]
variable ForceYCad3     equal f_cad3[2]
variable ForceZCad3     equal f_cad3[3]
variable TorqueXCad3    equal f_cad3[4]
variable TorqueYCad3    equal f_cad3[5]
variable TorqueZCad3    equal f_cad3[6]
variable xCad3          equal f_cad3[7]
variable yCad3          equal f_cad3[8]
variable zCad3          equal f_cad3[9]
fix DumpTextCad3 all print ${nDumpForce} "${ForceXCad3} ${ForceYCad3} ${ForceZCad3} ${TorqueXCad3} ${TorqueYCad3} ${TorqueZCad3} ${xCad3} ${yCad3} ${zCad3} &
                            ${mPartCol} ${mPartBox} ${numPartCol} ${numPartBox}" &
			screen no title "Fx Fy Fz Tx Ty Tz X Y Z massPartCol massPartBox numPartCol numPartBox" file ./results/force.cad3_fid${fileID}.txt

#settle particles
run     ${nStepsSettle}

# move 
fix     move all move/mesh mesh cad2 linear -${velWall} 0. 0.

#shearCellType     3        #(1=PoorMan; 2=Jenike; 3=Schulze)
run     ${nStepsRun}
fix_modify cad3 target_val ${ctrlForceZero}
run     ${nStepsRun2}
fix_modify cad3 target_val ${ctrlForcemain}
run     ${nStepsRun3}

variable fileID equal ${fileID}+1

# loop
clear
next     fric
jump     SELF loopiteration
variable fric delete

next     rf
jump     SELF loopiteration
variable rf delete

next     rest
jump     SELF loopiteration
variable rest delete

next     shearperc
jump     SELF loopiteration
variable shearperc delete

next     expMass
jump     SELF loopiteration

variable expMass delete
next     shearCellType
jump     SELF loopiteration