#########################################################################################
# title: in.repose_init_packing                                                      #
# version: 6.01                                                                         #
# additional files: folder mesh,                                                        #
#                   folder matlab,                                                      #
#                   loop input script in.shearCell_loop                                 #
# date: Jul. 2015                                                                       #
# authors: Benvenuti, L., Queteschiner, D., Aigner, A. ,Hager, A., Goniva, C., Kloss, C., Berger R.   #
# e-mail: luca.benvenuti@jku.at                                                         #
# short description: liggghts-input file for computing the angle of repose while        #
#   varying the coefficient of rolling friction. Part of the material characterization  #
#   project                                                   #
#########################################################################################
#########################################################################################
#                               user defined settings: settings                         #
#########################################################################################
variable    rad     equal       1500e-6          # particle radius [m]
variable    radmu   equal       1500e-6             # particle radius mean [m]
variable  radsigma  equal       707e-6            # particle radius sigma[m]
variable  radR1     equal       0.0025
variable  radPerc1  equal       0.20
variable  radR2     equal       0.002
variable  radPerc2  equal       0.20
variable  radR3     equal       0.0015
variable  radPerc3  equal       0.20
variable  radR4     equal       0.001
variable  radPerc4  equal       0.20
variable  radR5     equal       0.0005
variable  radPerc5  equal       0.20
variable  radR6     equal       0.0001
variable  radPerc6  equal       0.0
variable    dens    equal       1000         #sinterfine   # particle density [kg/m3]
variable    ym      equal       1e7             # Young's modulus  [Pa]
variable    pr      equal       0.4            # Poisson ratio   [-]
variable    rest    equal       0.5            # coefficient of restitution [-]
variable    fric    equal       0.3        # coefficient of friction (loop variable) [-]
variable    rf      equal       0.3         # coefficient of rolling friction (optional loop) [-]
variable    rolfrtypnum equal	4		# rolling friction option ( 1 = off, 2 = cdt, 3 = epsd, 4 = epsd2)
variable    rolfrtyp string	epsd2
variable    uniSys  equal       1		 # unit System ( 1=SI, 2=cgs)
variable    radDist equal       3          # radius distribution (1 = (25%rad*0.99 , 25%rad*1.01, 50%rad ; 
                                           # 2=gaussian distribution with radmu & radsigma)
                                           # for 2 you must uncomment radsigma & radmu, the latter must be equal to rad
                                           # 3=discrete distribution with real values
variable    dt      equal       1e-6            # time step width [s]

variable    dCylDp  equal      ${DCYLDP}      # ratio cylinder diameter to particle diameter (optional loop)
variable    G_D_RATIO  equal   ${dCylDp}

variable    accGrev equal       9.81            # acceleration due to gravity [m/s2]

processors  ${XPROCS} ${YPROCS} ${ZPROCS}

variable    numProc equal       ${XPROCS}*${YPROCS}*${ZPROCS}

#########################################################################################
#   IF YOU CHANGE ANYTHING BELOW THIS LINE, YOU MIGHT ADAPT THE POSTPROCESSING SCRIPT   #
#########################################################################################

#########################################################################################
#                               internal settings - do not touch                        #
#########################################################################################
variable vthre equal 0.005   # [m/s]; threshold for loop condition
#########################################################################################
units		si
#########################################################################################
# geometry scaling, mass, number of timesteps, ...
variable    rad1            equal   0.99*${rad}
variable    rad2            equal   1.01*${rad}

variable    skin            equal   0.50*${radR1}

variable    desiredVolumeFraction     equal   0.4

variable    characteristicVelocity equal 0.1

# run & dump times
variable    nDump           equal   round(1e-2/${dt})
variable    nScreen         equal   round(1e-3/${dt})

variable	nStepsSettle equal round(0.001/${dt})
variable	nStepsRun    equal round(0.01/${dt})
variable	dumpfreq     equal round(0.01/${dt})
variable	thermofreq   equal round(0.001/${dt})

#########################################################################################

# create directories
shell   mkdir logs
shell   mkdir restart
shell   mkdir post
shell   mkdir results
shell	mkdir area
shell	mkdir images
shell	mkdir post_param

# writing log file to post folder
log     logs/log_init.repose_rad${rad}_dcyldp${dCylDp}.txt

atom_style	granular
atom_modify	map array
boundary	m m fm
newton      off

communicate	single vel yes

# will be extended automatically (boundary m m fm)
region		reg block -0.01 0.01 -0.01 0.01 -0.15 0.01 units box
create_box	2 reg

neighbor	    ${skin} bin
neigh_modify	delay 0

#Material properties required for new pair styles
fix     m1 all property/global youngsModulus peratomtype ${ym} ${ym}
fix     m2 all property/global poissonsRatio peratomtype ${pr} ${pr}
fix     m3 all property/global coefficientRestitution peratomtypepair 2 ${rest} ${rest} ${rest} ${rest}
fix     m4 all property/global coefficientFriction peratomtypepair 2 ${fric} 0.0 0.0 0.0
fix     m5 all property/global coefficientRollingFriction peratomtypepair 2 ${rf} 0.0 0.0 0.0
fix     m6 all property/global characteristicVelocity scalar ${characteristicVelocity}

# pair style
pair_style 	gran model hertz tangential history rolling_friction ${rolfrtyp}
pair_coeff	* *

#Timestep
timestep	${dt}

fix		gravi all gravity ${accGrev} vector 0.0 0.0 -1.0

# define the material in use
fix		ptsd1  all particletemplate/sphere 5333 atom_type 1 density constant ${dens} radius constant ${radR1} 
fix		ptsd2  all particletemplate/sphere 5334 atom_type 1 density constant ${dens} radius constant ${radR2} 
fix		ptsd3  all particletemplate/sphere 5335 atom_type 1 density constant ${dens} radius constant ${radR3} 
fix		ptsd4  all particletemplate/sphere 5336 atom_type 1 density constant ${dens} radius constant ${radR4} 
fix		ptsd5  all particletemplate/sphere 5337 atom_type 1 density constant ${dens} radius constant ${radR5} 
fix		ptsd6  all particletemplate/sphere 5338 atom_type 1 density constant ${dens} radius constant ${radR6}
fix		pdd  all particledistribution/discrete 5339  6 ptsd1 ${radPerc1} ptsd2 ${radPerc2} ptsd3 ${radPerc3} ptsd4 ${radPerc4} ptsd5 ${radPerc5} ptsd6 ${radPerc6}       


# calculate maximum diameter in simulation
fix		maxdiam all diam/max
variable	maxdiam equal f_maxdiam

variable	dx_relax equal ${maxdiam}/20.

# scaling factor for mesh
variable scale equal ${G_D_RATIO}*${maxdiam}/1.5

print	"G_D_RATIO ${G_D_RATIO}"
print	"maxdiam ${maxdiam}"
print	"Scaling factor ${scale}"

# region and insertion
variable rcyl equal ${G_D_RATIO}*${maxdiam}*0.9/2.
variable hcyl equal 8./13.*${G_D_RATIO}*${maxdiam}

# meshes # use the imported meshes as granular wall
fix		cad1 all mesh/surface file meshes/ground.stl type 1 scale ${scale}
fix		cad2 all mesh/surface file meshes/cylinder.stl type 1 scale ${scale}
fix		granwalls all wall/gran model hooke mesh n_meshes 2 meshes cad1 cad2
fix      topwall all wall/gran model hooke primitive type 1 zplane ${hcyl}


#region and insertion
region	bc cylinder z 0.0 0.0 ${rcyl}  0.0 ${hcyl} units box
fix     ins all insert/pack seed 5332 distributiontemplate pdd maxattempt 100 insert_every once overlapcheck yes all_in yes &
		region bc volumefraction_region ${desiredVolumeFraction} ntry_mc 10000 warn_region no

#apply nve integration to all particles that are inserted as single particles
fix		integr all nve/limit absolute ${dx_relax}

# lower region to delete particles from
region		lower block INF INF INF INF INF 0. units box

# load balancing
fix     lb all balance 0 xyz 10 1.05

#check timestep
fix		ts all check/timestep/gran ${thermofreq} 0.1 0.1

#output settings, include total thermal energy
compute		    rke all erotate/sphere
#thermo_style	custom step atoms ke c_rke vol cpu
thermo_style	custom step atoms ke c_rke f_ts[1] f_ts[2] cpu vol
#thermo		    ${nScreen}
thermo		${thermofreq}
thermo_modify	lost ignore norm no
compute_modify  thermo_temp dynamic yes

# --- runs ---

# dump stl
dump		dumpstl all stl ${dumpfreq} post/stldump_pack_*.stl

#insert the first particles so that dump is not empty
run		1
dump		dmp all custom ${dumpfreq} post/dump_pack_*.fill id type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius

# check only once the timestep
###################unfix ts
#unfix csv


# make particles slightly larger (to be able to make them smaller lateron)
compute 	rad all property/atom radius
variable	d_grown atom 1.01*2.*c_rad
fix		grow all adapt 1 atom diameter v_d_grown
run		1
unfix		grow

compute vave all reduce ave vz vy vz

variable vcmx equal vcm(all,x)
variable vcmy equal vcm(all,y)
variable vcmz equal vcm(all,z)

variable vave equal sqrt(v_vcmx*v_vcmx+v_vcmy*v_vcmy+v_vcmz*v_vcmz)
#here it was the thresold variable

#run     ${nDump}
run	${nStepsSettle}

label loop
  print "-----> Checking Velocity..."
  if "${vave}<${vthre}" then "jump SELF endloop"
  print "-----> v ave ${vave}, v threshold ${vthre}, continuing run"  
  #set group all vx 0. vy 0. vz 0.
  run ${nStepsRun}
jump SELF loop
label endloop
print "-----> v ave ${vave}, v threshold ${vthre}, end run"


# make particles slightly smaller to remove overlap
variable	d_shrunk atom 1./1.01*2.*c_rad
fix		    shrink all adapt 1 atom diameter v_d_shrunk
run		    1
unfix		  shrink

write_restart	./restart/restart.repose_rad${rad}_dcyldp${dCylDp}_${OMPON}