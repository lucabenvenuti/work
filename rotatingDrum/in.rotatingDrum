#Rotating Drum script
#September 09 2014
#Luca Benvenuti & Daniel Nasato

##Variables - User input##
variable	dt		equal 0.00001   #Time step
variable	save		equal 0.1	#Save results interval
variable	rpm		equal 1.5	#Drum rotational speed
variable	radius		equal 0.01	#Particle radius
variable	massIns		equal 10.0	#Total mass to be inserted in the drum
variable	runTime		equal 2.5	#Total time simulation should run
variable	fillPerc	equal 0.5	#Proportion of cylinder you want filled with particles
	

#########################
###Internal variables###
variable	saveStep	equal ${save}/${dt}
variable	neigh		equal ${radius}*2.0
variable	massRate	equal ${massIns}/2.0
variable	extrLen		equal ${radius}*10.0
variable	runTimeStep	equal ${runTime}/${dt}
variable	cylRadius	equal 0.19
variable	cylLenght	equal 1.0
variable	period		equal 60/${rpm}

shell		mkdir 	post
shell		mkdir	restart

###Other calculations###
#variable	cylVolume	equal PI*${cylRadius}*${cylRadius}*${cylLenght}
#variable	partVolume	equal PI*(4/3)*${radius}*${radius}*${radius}
#variable	usedVolume	equal ${fillPerc}*${cylVolume}  #Volume of the cylinder that will contain particles
variable	solidPacking	equal 0.6 			#Fraction of solid in the occupied region of the cylinder
variable	solidFraction	equal ${fillPerc}*${solidPacking}


#######################


atom_style	granular
atom_modify	map array
boundary	f f f
newton		off

communicate	single vel yes

units		si

region		reg block -0.2 0.2 -0.2 0.2 -0.01 1.01 units box
create_box	2 reg

neighbor	${neigh} bin
neigh_modify	delay 0

#Material properties required for new pair styles

fix 		m1 all property/global youngsModulus peratomtype 5.e6 5.e10
fix 		m2 all property/global poissonsRatio peratomtype 0.45 0.45
fix 		m3 all property/global coefficientRestitution peratomtypepair 2 0.3 0.3 0.3 0.3
fix 		m4 all property/global coefficientFriction peratomtypepair 2 0.5 0.5 0.5 0.5

#New pair style
pair_style 	gran model hertz tangential history #Hertzian without cohesion
pair_coeff	* *

timestep	${dt}

fix		gravi all gravity 9.81 vector 0.0 -1.0 0.0

#granular walls
fix		pt1 all mesh/surface/stress file meshes/openCylinder.stl type 2 
fix		pt2 all mesh/surface/stress file meshes/ZminusWall.stl type 2
fix		pt3 all mesh/surface/stress file meshes/ZplusWall.stl type 2

fix 		wall all wall/gran model hertz tangential history mesh n_meshes 3 meshes pt1 pt2 pt3

#distributions for insertion
fix		pts1 all particletemplate/sphere 1 atom_type 1 density constant 2500 radius constant ${radius}
#fix		pts2 all particletemplate/sphere 1 atom_type 1 density constant 2500 radius constant 0.025
fix		pdd1 all particledistribution/discrete 1.  1 pts1 1.0 

#region for insertion

group		nve_group region reg
region		bc cylinder z 0.0 0.0 0.17 0.01 0.99 units box

fix		ins nve_group insert/pack seed 100001 distributiontemplate pdd1 & 
		insert_every 1 overlapcheck yes all_in yes volumefraction_region ${solidFraction} region bc

#apply nve integration to all particles that are inserted as single particles



fix 	   	ts all check/timestep/gran ${saveStep} 0.15 0.15 
variable	balInt equal ${saveStep}*2
#fix	   	bal all balance ${saveStep} xyz 10 1.1
	
fix		integr nve_group nve/sphere

#output settings, include total thermal energy

compute		rke all erotate/sphere
thermo_style	custom step atoms ke c_rke f_ts[1] f_ts[2] vol
thermo		${saveStep}
thermo_modify	lost ignore norm no
compute_modify	thermo_temp dynamic yes

#insert the first particles so that dump is not empty
run		1
unfix		ins
dump		dmp all custom ${saveStep} post/dump*.drum id type type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius 
dump 		dumpstress all mesh/gran/VTK ${saveStep} post/dump*.vtk stress pt1 pt2 pt3

##Create particles and let them accomodate
variable	accomTime	equal	1.0/${dt}
run		${accomTime}

fix		rotate all move/mesh mesh pt1 rotate origin 0. 0. 0. axis 0. 0. 1. period ${period}

run		${runTimeStep}

write_restart	./restart/restart.drum
 
